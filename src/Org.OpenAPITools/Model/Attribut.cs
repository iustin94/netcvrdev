/*
 * cvr.dev API dokumentation
 *
 * # Introduktion Velkommen til [cvr.dev](https://cvr.dev)'s HTTP API dokumentation.  Dette dokument beskriver, hvordan du kan benytte vores API til at hente CVR-data. Vi henter og cacher data fra Virks CVR-database en gang i minuttet, så vi altid kan levere så nøjagtig data som muligt.  Udover at være beskrevet på denne sige, er vores API også [beskrevet i OpenAPI 3.0 format](https://docs.cvr.dev/cvrdev_openapi.yml) og som [Postman-dokumentation](https://documenter.getpostman.com/view/13435475/TVejiqUr).  For at benytte vores API skal du have en [cvr.dev-konto](https://cvr.dev/#/auth/signup) med et aktivt abonnement, som du kan [prøve gratis de første 30 dage](https://cvr.dev/#/prices). 
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Attribut
    /// </summary>
    [DataContract(Name = "Attribut")]
    public partial class Attribut : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Attribut" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Attribut() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Attribut" /> class.
        /// </summary>
        /// <param name="sekvensnr">sekvensnr (required).</param>
        /// <param name="type">Beskriver typen af værdier i &#39;vaerdier&#39;-arrayet. Det kan være nærmest hvad som helst; kontaktoplysninger, adresser, numeriske værdier, selskabers formål mv.  (required).</param>
        /// <param name="vaerdier">Vilkårlig værdier, der kan indeholde nærmest hvad som helst; selskabs formål, kontaktoplysninger, hjemmeside, adresse, numeriske værdier mv.  Værdiens betydning bør kunne tydes fra konteksten.  (required).</param>
        /// <param name="vaerditype">En beskrivelse af typen, der er indeholdt i &#x60;vaerdier&#x60;-arrayet, e.g. &#x60;string&#x60;, &#x60;date&#x60;, &#x60;decimal&#x60;, &#x60;boolean&#x60; .</param>
        public Attribut(int sekvensnr = default(int), string type = default(string), List<Vaerdi> vaerdier = default(List<Vaerdi>), string vaerditype = default(string))
        {
            this.Sekvensnr = sekvensnr;
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new ArgumentNullException("type is a required property for Attribut and cannot be null");
            }
            this.Type = type;
            // to ensure "vaerdier" is required (not null)
            if (vaerdier == null)
            {
                throw new ArgumentNullException("vaerdier is a required property for Attribut and cannot be null");
            }
            this.Vaerdier = vaerdier;
            this.Vaerditype = vaerditype;
        }

        /// <summary>
        /// Gets or Sets Sekvensnr
        /// </summary>
        /// <example>0</example>
        [DataMember(Name = "sekvensnr", IsRequired = true, EmitDefaultValue = true)]
        public int Sekvensnr { get; set; }

        /// <summary>
        /// Beskriver typen af værdier i &#39;vaerdier&#39;-arrayet. Det kan være nærmest hvad som helst; kontaktoplysninger, adresser, numeriske værdier, selskabers formål mv. 
        /// </summary>
        /// <value>Beskriver typen af værdier i &#39;vaerdier&#39;-arrayet. Det kan være nærmest hvad som helst; kontaktoplysninger, adresser, numeriske værdier, selskabers formål mv. </value>
        /// <example>RevisionsvirksomhedProduktionsenhedRevisortilknytning</example>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Vilkårlig værdier, der kan indeholde nærmest hvad som helst; selskabs formål, kontaktoplysninger, hjemmeside, adresse, numeriske værdier mv.  Værdiens betydning bør kunne tydes fra konteksten. 
        /// </summary>
        /// <value>Vilkårlig værdier, der kan indeholde nærmest hvad som helst; selskabs formål, kontaktoplysninger, hjemmeside, adresse, numeriske værdier mv.  Værdiens betydning bør kunne tydes fra konteksten. </value>
        [DataMember(Name = "vaerdier", IsRequired = true, EmitDefaultValue = true)]
        public List<Vaerdi> Vaerdier { get; set; }

        /// <summary>
        /// En beskrivelse af typen, der er indeholdt i &#x60;vaerdier&#x60;-arrayet, e.g. &#x60;string&#x60;, &#x60;date&#x60;, &#x60;decimal&#x60;, &#x60;boolean&#x60; 
        /// </summary>
        /// <value>En beskrivelse af typen, der er indeholdt i &#x60;vaerdier&#x60;-arrayet, e.g. &#x60;string&#x60;, &#x60;date&#x60;, &#x60;decimal&#x60;, &#x60;boolean&#x60; </value>
        /// <example>date</example>
        [DataMember(Name = "vaerditype", EmitDefaultValue = false)]
        public string Vaerditype { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Attribut {\n");
            sb.Append("  Sekvensnr: ").Append(Sekvensnr).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Vaerdier: ").Append(Vaerdier).Append("\n");
            sb.Append("  Vaerditype: ").Append(Vaerditype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
