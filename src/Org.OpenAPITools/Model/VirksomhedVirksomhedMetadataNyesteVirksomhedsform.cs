/*
 * cvr.dev API dokumentation
 *
 * # Introduktion Velkommen til [cvr.dev](https://cvr.dev)'s HTTP API dokumentation.  Dette dokument beskriver, hvordan du kan benytte vores API til at hente CVR-data. Vi henter og cacher data fra Virks CVR-database en gang i minuttet, så vi altid kan levere så nøjagtig data som muligt.  Udover at være beskrevet på denne sige, er vores API også [beskrevet i OpenAPI 3.0 format](https://docs.cvr.dev/cvrdev_openapi.yml) og som [Postman-dokumentation](https://documenter.getpostman.com/view/13435475/TVejiqUr).  For at benytte vores API skal du have en [cvr.dev-konto](https://cvr.dev/#/auth/signup) med et aktivt abonnement, som du kan [prøve gratis de første 30 dage](https://cvr.dev/#/prices). 
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// VirksomhedVirksomhedMetadataNyesteVirksomhedsform
    /// </summary>
    [DataContract(Name = "Virksomhed_virksomhedMetadata_nyesteVirksomhedsform")]
    public partial class VirksomhedVirksomhedMetadataNyesteVirksomhedsform : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VirksomhedVirksomhedMetadataNyesteVirksomhedsform" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VirksomhedVirksomhedMetadataNyesteVirksomhedsform() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VirksomhedVirksomhedMetadataNyesteVirksomhedsform" /> class.
        /// </summary>
        /// <param name="ansvarligDataleverandoer">ansvarligDataleverandoer (required).</param>
        /// <param name="kortBeskrivelse">kortBeskrivelse (required).</param>
        /// <param name="langBeskrivelse">langBeskrivelse (required).</param>
        /// <param name="periode">periode (required).</param>
        /// <param name="sidstOpdateret">Seneste tidspunkt hvor dette objekt blev opdateret  (required).</param>
        /// <param name="virksomhedsformkode">virksomhedsformkode (required).</param>
        /// <param name="sammensatStatus">sammensatStatus.</param>
        /// <param name="stiftelsesDato">stiftelsesDato.</param>
        /// <param name="virkningsDato">virkningsDato.</param>
        public VirksomhedVirksomhedMetadataNyesteVirksomhedsform(string ansvarligDataleverandoer = default(string), string kortBeskrivelse = default(string), string langBeskrivelse = default(string), Periode periode = default(Periode), string sidstOpdateret = default(string), long virksomhedsformkode = default(long), string sammensatStatus = default(string), string stiftelsesDato = default(string), string virkningsDato = default(string))
        {
            // to ensure "ansvarligDataleverandoer" is required (not null)
            if (ansvarligDataleverandoer == null)
            {
                throw new ArgumentNullException("ansvarligDataleverandoer is a required property for VirksomhedVirksomhedMetadataNyesteVirksomhedsform and cannot be null");
            }
            this.AnsvarligDataleverandoer = ansvarligDataleverandoer;
            // to ensure "kortBeskrivelse" is required (not null)
            if (kortBeskrivelse == null)
            {
                throw new ArgumentNullException("kortBeskrivelse is a required property for VirksomhedVirksomhedMetadataNyesteVirksomhedsform and cannot be null");
            }
            this.KortBeskrivelse = kortBeskrivelse;
            // to ensure "langBeskrivelse" is required (not null)
            if (langBeskrivelse == null)
            {
                throw new ArgumentNullException("langBeskrivelse is a required property for VirksomhedVirksomhedMetadataNyesteVirksomhedsform and cannot be null");
            }
            this.LangBeskrivelse = langBeskrivelse;
            // to ensure "periode" is required (not null)
            if (periode == null)
            {
                throw new ArgumentNullException("periode is a required property for VirksomhedVirksomhedMetadataNyesteVirksomhedsform and cannot be null");
            }
            this.Periode = periode;
            // to ensure "sidstOpdateret" is required (not null)
            if (sidstOpdateret == null)
            {
                throw new ArgumentNullException("sidstOpdateret is a required property for VirksomhedVirksomhedMetadataNyesteVirksomhedsform and cannot be null");
            }
            this.SidstOpdateret = sidstOpdateret;
            this.Virksomhedsformkode = virksomhedsformkode;
            this.SammensatStatus = sammensatStatus;
            this.StiftelsesDato = stiftelsesDato;
            this.VirkningsDato = virkningsDato;
        }

        /// <summary>
        /// Gets or Sets AnsvarligDataleverandoer
        /// </summary>
        /// <example>T&amp;S</example>
        [DataMember(Name = "ansvarligDataleverandoer", IsRequired = true, EmitDefaultValue = true)]
        public string AnsvarligDataleverandoer { get; set; }

        /// <summary>
        /// Gets or Sets KortBeskrivelse
        /// </summary>
        /// <example>APS</example>
        [DataMember(Name = "kortBeskrivelse", IsRequired = true, EmitDefaultValue = true)]
        public string KortBeskrivelse { get; set; }

        /// <summary>
        /// Gets or Sets LangBeskrivelse
        /// </summary>
        /// <example>Anpartsselskab</example>
        [DataMember(Name = "langBeskrivelse", IsRequired = true, EmitDefaultValue = true)]
        public string LangBeskrivelse { get; set; }

        /// <summary>
        /// Gets or Sets Periode
        /// </summary>
        [DataMember(Name = "periode", IsRequired = true, EmitDefaultValue = true)]
        public Periode Periode { get; set; }

        /// <summary>
        /// Seneste tidspunkt hvor dette objekt blev opdateret 
        /// </summary>
        /// <value>Seneste tidspunkt hvor dette objekt blev opdateret </value>
        /// <example>2020-04-08T00:10:47.000Z</example>
        [DataMember(Name = "sidstOpdateret", IsRequired = true, EmitDefaultValue = true)]
        public string SidstOpdateret { get; set; }

        /// <summary>
        /// Gets or Sets Virksomhedsformkode
        /// </summary>
        /// <example>80</example>
        [DataMember(Name = "virksomhedsformkode", IsRequired = true, EmitDefaultValue = true)]
        public long Virksomhedsformkode { get; set; }

        /// <summary>
        /// Gets or Sets SammensatStatus
        /// </summary>
        /// <example>NORMAL</example>
        [DataMember(Name = "sammensatStatus", EmitDefaultValue = false)]
        public string SammensatStatus { get; set; }

        /// <summary>
        /// Gets or Sets StiftelsesDato
        /// </summary>
        /// <example>1965-06-30</example>
        [DataMember(Name = "stiftelsesDato", EmitDefaultValue = true)]
        public string StiftelsesDato { get; set; }

        /// <summary>
        /// Gets or Sets VirkningsDato
        /// </summary>
        /// <example>2022-10-16</example>
        [DataMember(Name = "virkningsDato", EmitDefaultValue = true)]
        public string VirkningsDato { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VirksomhedVirksomhedMetadataNyesteVirksomhedsform {\n");
            sb.Append("  AnsvarligDataleverandoer: ").Append(AnsvarligDataleverandoer).Append("\n");
            sb.Append("  KortBeskrivelse: ").Append(KortBeskrivelse).Append("\n");
            sb.Append("  LangBeskrivelse: ").Append(LangBeskrivelse).Append("\n");
            sb.Append("  Periode: ").Append(Periode).Append("\n");
            sb.Append("  SidstOpdateret: ").Append(SidstOpdateret).Append("\n");
            sb.Append("  Virksomhedsformkode: ").Append(Virksomhedsformkode).Append("\n");
            sb.Append("  SammensatStatus: ").Append(SammensatStatus).Append("\n");
            sb.Append("  StiftelsesDato: ").Append(StiftelsesDato).Append("\n");
            sb.Append("  VirkningsDato: ").Append(VirkningsDato).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
